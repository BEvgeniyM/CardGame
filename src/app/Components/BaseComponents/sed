 rotetStock(elementContainer: ElementContainer, a: number): void {
        gsap.to(elementContainer, {
            angle: -elementContainer.childs.length / 2 * 15,
            duration: 2 * DataSetting.DefaultDuration
        })

        const startA = 15+a;
        const andA = 150+a;
        const diameter = 150;
        const angleBetweenPoints = (startA - andA) / (elementContainer.childs.length - 1);      
        const startAngleRad = startA * Math.PI / 180;
        const angleBetweenPointsRad = angleBetweenPoints * Math.PI / 180;

        for (let i = 0; i < elementContainer.childs.length; i++) {
            const csp = elementContainer.childs[i].element as Sprite
            csp.angle = 0;
            csp.anchor.set(0.5, 0.5);
            const radians = startAngleRad + angleBetweenPointsRad * i;
            const x = diameter / 2 * Math.cos(radians);
            const y = diameter / 2 * Math.sin(radians);
            elementContainer.childs[i].animation.fan(radians,x,y);
            // elementContainer.childs[i].animation.fan((i * 15 - 75 + a),100);
        }
    }  


    fan(radians: number,x: number,y:number): Animation {
        const degrees = radians * (180 /Math.PI);
        gsap.timeline()
          .to(this._element, {
            angle:degrees +90,
            duration: DataSetting.DefaultDuration
          })
          .to(this._element, {
            x:x,
            y:y,      
            delay: 0,
            duration: DataSetting.DefaultDuration,
          })   
        return this
      }